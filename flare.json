 "jsx": {
      "comment": "Uses the JSX syntax as decribed at http://facebook.github.io/jsx/",
      "comment": "and the ECMA6 draft here http://people.mozilla.org/~jorendorff/es6-draft.html",
      "comment": "together with the Unicode Spec http://www.unicode.org/reports/tr31/",
      "comment": "but excludes using unicode esc characters, <ZWNJ> and <ZWJ> as per the draft. Will anyone use these?",
      "comment": "Avoid < operator expressions as best we can using Zertosh's regex",
      "patterns": [
        {
          "begin": "(?<=\\(|{|\\[|,|&&|\\|\\||\\?|:|=|=>|\\Wreturn|^return|\\Wyield|^yield|\\Wdefault|\\Wvoid|^void|^)\\s*+(?=<[$_\\p{L}]|<\\s*>)",
          "end": "(?=.)",
          "applyEndPatternLast": 1,
          "patterns": [
            { "include": "#jsx-tag-element-name" }
          ]
        }
      ]
    },
    "jsx-tag-element-name": {
      "patterns": [
        {
          "comment": "JSX Fragment",
          "name": "meta.tag.jsx",
          "contentName": "JSXAttrs",
          "begin": "\\s*+(<)\\s*(?=>)",
          "end": "(?<=</)(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.jsx" }
          },
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.jsx" }
          },
          "patterns": [
            { "include": "#jsx-tag-termination" }
          ]
        },
        {
          "comment": "Trap tag <JSXElementName Where JSXElement Name = aaa.bbb",
          "comment": "We use the tag name to form a completion for </JSXElementName>",
          "comment": "as well as terminating a <JSXElementName /> form",
          "comment": "Tags that end > are trapped in #jsx-tag-termination",
          "name": "meta.tag.jsx",
          "contentName": "JSXAttrs",
          "begin": "\\s*+(<)((\\p{Ll}[\\p{Ll}0-9]*)|((?:[$_\\p{L}\\p{Nl}][$_\\p{L}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Nl}\\p{Pc}-]*?:)?+(?:[$_\\p{L}\\p{Nl}](?:[$_\\p{L}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Nl}\\p{Pc}\\.-](?<!\\.\\.))*+)+))(?=[ />\\s])(?![:])(?<!\\.|:)",
          "end": "\\s*(?<=</)((\\4)|\\2)(>)|(/>)|((?<=</)[\\S ]*?)>",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.jsx" },
            "2": { "name": "entity.name.tag.open.jsx" },
            "4": { "name": "support.class.component.open.jsx"}
          },
          "endCaptures": {
            "1": { "name": "entity.name.tag.close.jsx" },
            "2": { "name": "support.class.component.close.jsx"},
            "3": { "name": "punctuation.definition.tag.jsx" },
            "4": { "name": "punctuation.definition.tag.jsx" },
            "5": { "name": "invalid.illegal.termination.jsx"}
          },
          "patterns": [
            { "include": "#jsx-tag-termination" },
            { "include": "#jsx-tag-attributes" }
          ]
        }
      ]
    },
    "jsx-tag-termination": {
      "patterns": [
        {
          "comment": "this matches the end > of an opening tag when in the form <tag> </tag>",
          "comment": "uses non consuming search for </ in </tag>",
          "contentName": "JSXNested",
          "begin": "(>)",
          "end": "(</)",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.tag.jsx" },
            "1": { "name": "JSXStartTagEnd" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.tag.jsx" },
            "1": { "name": "JSXEndTagStart" }
          },
          "patterns": [
            { "include": "#jsx-evaluated-code" },
            { "include": "#jsx-entities" },
            { "include": "#jsx-tag-element-name" }
          ]
        }
      ]
    },
    "jsx-tag-attributes": {
      "patterns": [
        { "include": "#jsx-attribute-name" },
        { "include": "#jsx-assignment" },
        { "include": "#jsx-string-double-quoted" },
        { "include": "#jsx-string-single-quoted" },
        { "include": "#jsx-evaluated-code" },
        { "include": "#jsx-tag-element-name" },
        { "include": "#comments" }
      ]
    },
    "jsx-spread-attribute": {
      "patterns": [
        {
          "comment": "Spread attribute { ... AssignmentExpression }",
          "match": "(?<!\\.)\\.\\.\\.",
          "name": "keyword.operator.spread.jsx"
        }
      ]
    },
    "jsx-attribute-name": {
      "patterns": [
        {
          "comment": "look for attribute name",
          "match": "(?<!\\S)([$_\\p{L}](?:[$.\\p{L}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Nl}\\p{Pc}-](?<!\\.\\.))*+)(?<!\\.)(?=//|/\\*|=|\\s|>|/>)",
          "captures": {
            "0": { "name": "entity.other.attribute-name.jsx" }
          }
        }
      ]
    },
    "jsx-assignment": {
      "patterns": [
        {
          "comment": "look for attribute assignment",
          "name": "keyword.operator.assignment.jsx",
          "match": "=(?=\\s*(?:'|\"|{|/\\*|<|//|\\n))"
        }
      ]
    },
    "jsx-string-double-quoted": {
      "name": "string.quoted.double.js",
      "begin": "\"",
      "end": "\"(?<!\\\\\")",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.jsx" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.jsx" }
      },
      "patterns": [
        { "include": "#jsx-entities" }
      ]
    },
    "jsx-string-single-quoted": {
      "name": "string.quoted.single.js",
      "begin": "'",
      "end": "'(?<!\\\\')",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.jsx" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.jsx" }
      },
      "patterns": [
        { "include": "#jsx-entities" }
      ]
    },
    "jsx-evaluated-code": {
      "patterns": [
        {
          "name": "meta.embedded.expression.js",
          "contentName": "source.js.jsx",
          "begin": "{",
          "end": "}",
          "beginCaptures": {
            "0": { "name": "punctuation.section.embedded.begin.jsx" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.section.embedded.end.jsx" }
          },
          "patterns": [
            { "include": "#jsx-string-double-quoted" },
            { "include": "#jsx-string-single-quoted" },
            { "include": "#jsx-spread-attribute" },
            { "include": "#core" }
          ]
        }
      ]
    },
    "jsx-entities": {
      "patterns" : [
        {
          "comment": "Embeded HTML entities &blah",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "0": { "name": "constant.character.entity.jsx" },
            "1": { "name": "punctuation.definition.entity.jsx" },
            "2": { "name": "entity.name.tag.html.jsx" },
            "3": { "name": "punctuation.definition.entity.jsx" }
          }
        },
        {
          "comment": "Entity with & and invalid name",
          "match": "&\\s*+;",
          "name": "invalid.illegal.bad-ampersand.jsx"
        }
      ]
    },
